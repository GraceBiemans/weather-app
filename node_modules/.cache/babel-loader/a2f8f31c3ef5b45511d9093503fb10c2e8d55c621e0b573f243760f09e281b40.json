{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather-app/src/js/DayWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherTypes = {\n  'clear': {\n    label: 'Clear',\n    icon: '☀️'\n  },\n  'pcloudy': {\n    label: 'Partly Cloudy',\n    icon: '🌤️'\n  },\n  'mcloudy': {\n    label: 'Mostly Cloudy',\n    icon: '🌥️'\n  },\n  'cloudy': {\n    label: 'Cloudy',\n    icon: '⛅️'\n  },\n  'humid': {\n    label: 'Humid',\n    icon: '🌤️'\n  },\n  'lightrain': {\n    label: 'Light Rain',\n    icon: '🌧️'\n  },\n  'oshower': {\n    label: 'Occasional Showers',\n    icon: '🌦️'\n  },\n  'ishower': {\n    label: 'Isolated Showers',\n    icon: '🌦️'\n  },\n  'lightsnow': {\n    label: 'Light Snow',\n    icon: '🌨️'\n  },\n  'rain': {\n    label: 'Rain',\n    icon: '🌧️'\n  },\n  'snow': {\n    label: 'Snow',\n    icon: '🌨️'\n  },\n  'rainsnow': {\n    label: 'Rain and Snow',\n    icon: '🌧️'\n  }\n};\nconst DayWeather = ({\n  weatherType\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState({});\n  useEffect(() => {\n    setWeatherData(() => ({\n      label: weatherType,\n      icon: WeatherTypes[weatherType]\n    }));\n  }, [weatherType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-type\",\n      children: weatherData.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-icon\",\n      children: weatherData.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DayWeather, \"fXI0sAmj29itrxQaRZQrWhx5dGc=\");\n_c = DayWeather;\nexport default DayWeather;\nvar _c;\n$RefreshReg$(_c, \"DayWeather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherTypes","label","icon","DayWeather","weatherType","_s","weatherData","setWeatherData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather-app/src/js/DayWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport '../css/Weather.css'\n\nconst WeatherTypes = {\n    'clear': {\n      label: 'Clear',\n      icon: '☀️'\n    },\n    'pcloudy': {\n      label: 'Partly Cloudy',\n      icon: '🌤️'\n    },\n    'mcloudy': {\n      label: 'Mostly Cloudy',\n      icon: '🌥️'\n    },\n    'cloudy': {\n      label: 'Cloudy',\n      icon: '⛅️'\n    },\n    'humid': {\n      label: 'Humid',\n      icon: '🌤️'\n    },\n    'lightrain': {\n      label: 'Light Rain',\n      icon: '🌧️'\n    },\n    'oshower': {\n      label: 'Occasional Showers',\n      icon: '🌦️'\n    },\n    'ishower': {\n      label: 'Isolated Showers',\n      icon: '🌦️'\n    },\n    'lightsnow': {\n      label: 'Light Snow',\n      icon: '🌨️'\n    },\n    'rain': {\n      label: 'Rain',\n      icon: '🌧️'\n    },\n    'snow': {\n      label: 'Snow',\n      icon: '🌨️'\n    },\n    'rainsnow': {\n      label: 'Rain and Snow',\n      icon: '🌧️'\n    }\n  };\n  \n\nconst DayWeather = ({weatherType}) => {\n  const [weatherData, setWeatherData] = useState({})\n\n  useEffect(() => {\n    setWeatherData(() => ({\n        label: weatherType,\n        icon: WeatherTypes[weatherType]\n    }));\n  }, [weatherType])\n\n  return (\n    <div className=\"day-weather\">\n        <div className=\"weather-type\">{weatherData.label}</div>\n        <div className=\"weather-icon\">{weatherData.icon}</div>\n    </div>\n  )\n}\n\nexport default DayWeather"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAG;EACjB,OAAO,EAAE;IACPC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EACD,SAAS,EAAE;IACTD,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE;EACR,CAAC;EACD,SAAS,EAAE;IACTD,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE;EACR,CAAC;EACD,QAAQ,EAAE;IACRD,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE;EACR,CAAC;EACD,OAAO,EAAE;IACPD,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EACD,WAAW,EAAE;IACXD,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE;EACR,CAAC;EACD,SAAS,EAAE;IACTD,KAAK,EAAE,oBAAoB;IAC3BC,IAAI,EAAE;EACR,CAAC;EACD,SAAS,EAAE;IACTD,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;EACR,CAAC;EACD,WAAW,EAAE;IACXD,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE;EACR,CAAC;EACD,MAAM,EAAE;IACND,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE;EACR,CAAC;EACD,MAAM,EAAE;IACND,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE;EACR,CAAC;EACD,UAAU,EAAE;IACVD,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE;EACR;AACF,CAAC;AAGH,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdU,cAAc,CAAC,OAAO;MAClBN,KAAK,EAAEG,WAAW;MAClBF,IAAI,EAAEF,YAAY,CAACI,WAAW;IAClC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA;IAAKS,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBV,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEH,WAAW,CAACL;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvDd,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEH,WAAW,CAACJ;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAAR,EAAA,CAhBKF,UAAU;AAAAW,EAAA,GAAVX,UAAU;AAkBhB,eAAeA,UAAU;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
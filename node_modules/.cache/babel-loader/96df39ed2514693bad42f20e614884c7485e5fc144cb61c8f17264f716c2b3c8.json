{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather-app/src/js/DayWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WeatherDate from './WeatherDate';\nimport '../css/Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherTypes = {\n  clear: {\n    label: 'Clear',\n    icon: '☀️'\n  },\n  pcloudy: {\n    label: 'Partly Cloudy',\n    icon: '🌤️'\n  },\n  mcloudy: {\n    label: 'Mostly Cloudy',\n    icon: '🌥️'\n  },\n  cloudy: {\n    label: 'Cloudy',\n    icon: '⛅️'\n  },\n  humid: {\n    label: 'Humid',\n    icon: '🌤️'\n  },\n  lightrain: {\n    label: 'Light Rain',\n    icon: '🌧️'\n  },\n  oshower: {\n    label: 'Occasional Showers',\n    icon: '🌦️'\n  },\n  ishower: {\n    label: 'Isolated Showers',\n    icon: '🌦️'\n  },\n  lightsnow: {\n    label: 'Light Snow',\n    icon: '🌨️'\n  },\n  rain: {\n    label: 'Rain',\n    icon: '🌧️'\n  },\n  snow: {\n    label: 'Snow',\n    icon: '🌨️'\n  },\n  rainsnow: {\n    label: 'Rain and Snow',\n    icon: '🌧️'\n  }\n};\nconst DayWeather = ({\n  weatherType\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState({\n    label: 'Unknown',\n    icon: ''\n  });\n  useEffect(() => {\n    setWeatherData(WeatherTypes[weatherType] || {\n      label: 'Unknown',\n      icon: ''\n    });\n  }, [weatherType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-weather\",\n    children: [/*#__PURE__*/_jsxDEV(WeatherDate, {\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-icon\",\n      children: weatherData.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-type\",\n      children: weatherData.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(DayWeather, \"ETfgVq5ouawfQ2KqqXbKl72C61U=\");\n_c = DayWeather;\nexport default DayWeather;\nvar _c;\n$RefreshReg$(_c, \"DayWeather\");","map":{"version":3,"names":["React","useState","useEffect","WeatherDate","jsxDEV","_jsxDEV","WeatherTypes","clear","label","icon","pcloudy","mcloudy","cloudy","humid","lightrain","oshower","ishower","lightsnow","rain","snow","rainsnow","DayWeather","weatherType","_s","weatherData","setWeatherData","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather-app/src/js/DayWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport WeatherDate from './WeatherDate';\nimport '../css/Weather.css'\n\nconst WeatherTypes = {\n  clear: {\n    label: 'Clear',\n    icon: '☀️'\n  },\n  pcloudy: {\n    label: 'Partly Cloudy',\n    icon: '🌤️'\n  },\n  mcloudy: {\n    label: 'Mostly Cloudy',\n    icon: '🌥️'\n  },\n  cloudy: {\n    label: 'Cloudy',\n    icon: '⛅️'\n  },\n  humid: {\n    label: 'Humid',\n    icon: '🌤️'\n  },\n  lightrain: {\n    label: 'Light Rain',\n    icon: '🌧️'\n  },\n  oshower: {\n    label: 'Occasional Showers',\n    icon: '🌦️'\n  },\n  ishower: {\n    label: 'Isolated Showers',\n    icon: '🌦️'\n  },\n  lightsnow: {\n    label: 'Light Snow',\n    icon: '🌨️'\n  },\n  rain: {\n    label: 'Rain',\n    icon: '🌧️'\n  },\n  snow: {\n    label: 'Snow',\n    icon: '🌨️'\n  },\n  rainsnow: {\n    label: 'Rain and Snow',\n    icon: '🌧️'\n  }\n};\n\nconst DayWeather = ({ weatherType }) => {\n  const [weatherData, setWeatherData] = useState({ label: 'Unknown', icon: '' });\n\n  useEffect(() => {\n    setWeatherData(WeatherTypes[weatherType] || { label: 'Unknown', icon: '' });\n  }, [weatherType]);\n\n  return (\n    <div className=\"day-weather\">\n        <WeatherDate index={index}></WeatherDate>\n        <div className=\"weather-icon\">{weatherData.icon}</div>\n        <div className=\"weather-type\">{weatherData.label}</div>\n    </div>\n  );\n};\n\nexport default DayWeather"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;IACLC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EACDC,OAAO,EAAE;IACPF,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE;EACR,CAAC;EACDE,OAAO,EAAE;IACPH,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE;EACR,CAAC;EACDG,MAAM,EAAE;IACNJ,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE;EACR,CAAC;EACDI,KAAK,EAAE;IACLL,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC;EACDK,SAAS,EAAE;IACTN,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE;EACR,CAAC;EACDM,OAAO,EAAE;IACPP,KAAK,EAAE,oBAAoB;IAC3BC,IAAI,EAAE;EACR,CAAC;EACDO,OAAO,EAAE;IACPR,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;EACR,CAAC;EACDQ,SAAS,EAAE;IACTT,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAE;EACR,CAAC;EACDS,IAAI,EAAE;IACJV,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE;EACR,CAAC;EACDU,IAAI,EAAE;IACJX,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE;EACR,CAAC;EACDW,QAAQ,EAAE;IACRZ,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE;EACR;AACF,CAAC;AAED,MAAMY,UAAU,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC;IAAEO,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAE9EP,SAAS,CAAC,MAAM;IACduB,cAAc,CAACnB,YAAY,CAACgB,WAAW,CAAC,IAAI;MAAEd,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EAC7E,CAAC,EAAE,CAACa,WAAW,CAAC,CAAC;EAEjB,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBtB,OAAA,CAACF,WAAW;MAACyB,KAAK,EAAEA;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACzC3B,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEH,WAAW,CAACf;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtD3B,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEH,WAAW,CAAChB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACT,EAAA,CAdIF,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AAgBhB,eAAeA,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
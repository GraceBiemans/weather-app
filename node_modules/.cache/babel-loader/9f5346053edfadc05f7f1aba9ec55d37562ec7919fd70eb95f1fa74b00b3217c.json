{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const latitude = 51.5074;\n  const longitude = -0.1278;\n  const url = `http://www.7timer.info/bin/api.pl?lon=${longitude}&lat=${latitude}&product=civillight&output=json`;\n\n  // Fetch weather data when the component mounts\n  useEffect(() => {\n    console.log(\"IN THE USEEFFECT\");\n    const fetchWeatherData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data && data.dataseries) {\n          setWeatherData(data.dataseries);\n        } else {\n          setError('No weather data found');\n        }\n      } catch (err) {\n        setError('Error fetching weather data');\n        console.error('Error fetching weather data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weather-container\",\n      children: weatherData.length > 0 ? weatherData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Weather:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), \" \", entry.weather]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No weather data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gMh8CXeyt+Z1Z5re5bOIyGwxIjA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","loading","setLoading","error","setError","latitude","longitude","url","console","log","fetchWeatherData","response","fetch","data","json","dataseries","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","id","length","map","entry","index","className","weather","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from 'react'\n\nfunction App() {\n\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n\n  const latitude = 51.5074;\n  const longitude = -0.1278;\n\n  const url = `http://www.7timer.info/bin/api.pl?lon=${longitude}&lat=${latitude}&product=civillight&output=json`;\n\n  // Fetch weather data when the component mounts\n  useEffect(() => {\n    console.log(\"IN THE USEEFFECT\")\n    const fetchWeatherData = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch(url);\n            const data = await response.json();\n            if (data && data.dataseries) {\n            setWeatherData(data.dataseries);\n            } else {\n            setError('No weather data found');\n            }\n        } catch (err) {\n            setError('Error fetching weather data');\n            console.error('Error fetching weather data:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    fetchWeatherData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Weather Data</h1>\n\n      {loading && <p>Loading weather data...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      <div id=\"weather-container\">\n        {weatherData.length > 0 ? (\n          weatherData.map((entry, index) => (\n            <div key={index} className=\"weather-item\">\n              <strong>Weather:</strong> {entry.weather}\n            </div>\n          ))\n        ) : (\n          <p>No weather data available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
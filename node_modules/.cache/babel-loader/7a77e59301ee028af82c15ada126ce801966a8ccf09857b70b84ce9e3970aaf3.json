{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather-app/src/js/DayWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherTypes = {\n  'clear': '☀️',\n  'pcloudy': '🌤️',\n  'mcloudy': '🌥️',\n  'cloudy': '⛅️',\n  'humid': '🌤️',\n  'lightrain': '🌧️',\n  'oshower': '🌦️',\n  'ishower': '💧',\n  'lightsnow': '🌨️',\n  'rain': '🌧️',\n  'snow': '🌨️',\n  'rainsnow': '🌧️'\n};\nconst DayWeather = ({\n  weatherType\n}) => {\n  _s();\n  const [weather, setWeather] = useState('');\n  const [weatherIcon, setWeatherIcon] = useState('☀️');\n  useEffect(() => {\n    console.log(JSON.stringify(weatherType));\n    setWeather(JSON.stringify(weatherType));\n    console.log(weather);\n    // console.log(WeatherTypes[weather])\n    console.log('\\n');\n    // setWeatherIcon(WeatherTypes[weather])\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weatherIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DayWeather, \"5ATQMZ/dUlYOI86nBlmq+syPZv0=\");\n_c = DayWeather;\nexport default DayWeather;\nvar _c;\n$RefreshReg$(_c, \"DayWeather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherTypes","DayWeather","weatherType","_s","weather","setWeather","weatherIcon","setWeatherIcon","console","log","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather-app/src/js/DayWeather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst WeatherTypes = {\n  'clear': '☀️',\n  'pcloudy': '🌤️',\n  'mcloudy': '🌥️',\n  'cloudy': '⛅️',\n  'humid': '🌤️',\n  'lightrain': '🌧️',\n  'oshower': '🌦️',\n  'ishower': '💧',\n  'lightsnow': '🌨️',\n  'rain': '🌧️',\n  'snow': '🌨️',\n  'rainsnow': '🌧️',\n\n}\n\nconst DayWeather = ({weatherType}) => {\n  const [weather, setWeather] = useState('')\n  const [weatherIcon, setWeatherIcon] = useState('☀️')\n\n  useEffect(() => {\n    console.log(JSON.stringify(weatherType))\n    setWeather(JSON.stringify(weatherType))\n    console.log(weather)\n    // console.log(WeatherTypes[weather])\n    console.log('\\n')\n    // setWeatherIcon(WeatherTypes[weather])\n  }, [])\n\n  return (\n    <div>\n        <div>{weather}</div>\n        <div>{weatherIcon}</div>\n    </div>\n  )\n}\n\nexport default DayWeather"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAG;EACnB,OAAO,EAAE,IAAI;EACb,SAAS,EAAE,KAAK;EAChB,SAAS,EAAE,KAAK;EAChB,QAAQ,EAAE,IAAI;EACd,OAAO,EAAE,KAAK;EACd,WAAW,EAAE,KAAK;EAClB,SAAS,EAAE,KAAK;EAChB,SAAS,EAAE,IAAI;EACf,WAAW,EAAE,KAAK;EAClB,MAAM,EAAE,KAAK;EACb,MAAM,EAAE,KAAK;EACb,UAAU,EAAE;AAEd,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC,CAAC;IACxCG,UAAU,CAACK,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC,CAAC;IACvCM,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACpB;IACAI,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAMR;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpBjB,OAAA;MAAAa,QAAA,EAAMN;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAAb,EAAA,CAnBKF,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAqBhB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
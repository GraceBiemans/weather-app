{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather/src/js/WeatherData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherData = ({\n  selectedCityObject\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cityData, setCityData] = useState(selectedCityObject);\n  let url = `http://www.7timer.info/bin/api.pl?lon=${cityData.longitude}&lat=${cityData.latitude}&product=civillight&output=json`;\n  useEffect(() => {\n    setCityData(selectedCityObject);\n  }, [selectedCityObject]);\n  useEffect(() => {\n    console.log(url);\n    const fetchWeatherData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data && data.dataseries) {\n          setWeatherData(data.dataseries);\n        } else {\n          setError('No weather data found');\n        }\n      } catch (err) {\n        setError('Error fetching weather data');\n        console.error('Error fetching weather data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeatherData();\n  }, [cityData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weather-container\",\n      children: weatherData.length > 0 ? weatherData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Weather:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), \" \", entry.weather]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No weather data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherData, \"7DjDLlhpU48H8/teAjxA3Foutq8=\");\n_c = WeatherData;\nexport default WeatherData;\nvar _c;\n$RefreshReg$(_c, \"WeatherData\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeatherData","selectedCityObject","_s","weatherData","setWeatherData","loading","setLoading","error","setError","cityData","setCityData","url","longitude","latitude","console","log","fetchWeatherData","response","fetch","data","json","dataseries","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","id","length","map","entry","index","className","weather","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather/src/js/WeatherData.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nconst WeatherData = ({selectedCityObject}) => {\n\n    const [weatherData, setWeatherData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [cityData, setCityData] = useState(selectedCityObject);\n\n    let url = `http://www.7timer.info/bin/api.pl?lon=${cityData.longitude}&lat=${cityData.latitude}&product=civillight&output=json`;\n\n    useEffect(() => {\n        setCityData(selectedCityObject);\n    }, [selectedCityObject])\n\n    useEffect(() => {\n        console.log(url)\n\n        const fetchWeatherData = async () => {\n            try {\n                setLoading(true);\n\n                const response = await fetch(url);\n                const data = await response.json();\n\n                if (data && data.dataseries) {\n                    setWeatherData(data.dataseries);\n                } else {\n                    setError('No weather data found');\n                }\n            } catch (err) {\n                setError('Error fetching weather data');\n                console.error('Error fetching weather data:', err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchWeatherData();\n    }, [cityData]);\n\n    return (\n        <div>\n            {loading && <p>Loading weather data...</p>}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n\n            <div id=\"weather-container\">\n                {weatherData.length > 0 ? (\n                weatherData.map((entry, index) => (\n                    <div key={index} className=\"weather-item\">\n                    <strong>Weather:</strong> {entry.weather}\n                    </div>\n                ))\n                ) : (\n                <p>No weather data available.</p>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
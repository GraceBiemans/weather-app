{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather/src/js/CityDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDropdown = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const options = [{\n    value: '',\n    label: 'Select an option'\n  }, {\n    value: 'option1',\n    label: 'Option 1'\n  }, {\n    value: 'option2',\n    label: 'Option 2'\n  }, {\n    value: 'option3',\n    label: 'Option 3'\n  }];\n  const handleSelectChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"dropdown\",\n      children: \"Choose a city: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"dropdown\",\n      value: selectedOption,\n      onChange: handleSelectChange,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n\n  // <div>\n  //   <label htmlFor=\"dropdown\">Choose a city: </label>\n  //   <select\n  //     id=\"dropdown\"\n  //     value={selectedOption}\n  //     onChange={handleSelectChange}\n  //   >\n  //     {options.map((option) => (\n  //       <option key={option.value} value={option.value}>\n  //         {option.label}\n  //       </option>\n  //     ))}\n  //   </select>\n\n  //   <div>\n  //     <strong>Selected Option: </strong>\n  //     {selectedOption ? selectedOption : 'None'}\n  //   </div>\n  // </div>\n  ;\n};\n_s(CityDropdown, \"+aYHZE0a/835MlUfESRBJSmwxHw=\");\n_c = CityDropdown;\nexport default CityDropdown;\nvar _c;\n$RefreshReg$(_c, \"CityDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CityDropdown","_s","selectedOption","setSelectedOption","options","value","label","handleSelectChange","event","target","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","option","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather/src/js/CityDropdown.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CityDropdown = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n\n  const options = [\n    { value: '', label: 'Select an option' },\n    { value: 'option1', label: 'Option 1' },\n    { value: 'option2', label: 'Option 2' },\n    { value: 'option3', label: 'Option 3' },\n  ];\n\n  const handleSelectChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"dropdown\">Choose a city: </label>\n\n      <select\n        id=\"dropdown\"\n        value={selectedOption}\n        onChange={handleSelectChange}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n    \n    // <div>\n    //   <label htmlFor=\"dropdown\">Choose a city: </label>\n    //   <select\n    //     id=\"dropdown\"\n    //     value={selectedOption}\n    //     onChange={handleSelectChange}\n    //   >\n    //     {options.map((option) => (\n    //       <option key={option.value} value={option.value}>\n    //         {option.label}\n    //       </option>\n    //     ))}\n    //   </select>\n\n    //   <div>\n    //     <strong>Selected Option: </strong>\n    //     {selectedOption ? selectedOption : 'None'}\n    //   </div>\n    // </div>\n  );\n};\n\nexport default CityDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMO,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAmB,CAAC,EACxC;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAW,CAAC,EACvC;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAW,CAAC,EACvC;IAAED,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAW,CAAC,CACxC;EAED,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpCL,iBAAiB,CAACK,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;EACvC,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAOY,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEjDhB,OAAA;MACEiB,EAAE,EAAC,UAAU;MACbX,KAAK,EAAEH,cAAe;MACtBe,QAAQ,EAAEV,kBAAmB;MAAAG,QAAA,EAE5BN,OAAO,CAACc,GAAG,CAAEC,MAAM,iBAClBpB,OAAA;QAA2BM,KAAK,EAAEc,MAAM,CAACd,KAAM;QAAAK,QAAA,EAC5CS,MAAM,CAACb;MAAK,GADFa,MAAM,CAACd,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN;;EAEL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAACd,EAAA,CAnDID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqDlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
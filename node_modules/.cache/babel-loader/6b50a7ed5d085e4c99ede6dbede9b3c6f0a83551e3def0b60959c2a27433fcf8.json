{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather/src/js/WeatherData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherData() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const latitude = 51.5074;\n  const longitude = -0.1278;\n  const url = `http://www.7timer.info/bin/api.pl?lon=${longitude}&lat=${latitude}&product=civillight&output=json`;\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data && data.dataseries) {\n          setWeatherData(data.dataseries);\n        } else {\n          setError('No weather data found');\n        }\n      } catch (err) {\n        setError('Error fetching weather data');\n        console.error('Error fetching weather data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n\n  //   return (\n  //     <div>\n  //       <h1>Weather Data</h1>\n\n  //       {loading && <p>Loading weather data...</p>}\n  //       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n  //       <div id=\"weather-container\">\n  //         {weatherData.length > 0 ? (\n  //           weatherData.map((entry, index) => (\n  //             <div key={index} className=\"weather-item\">\n  //               <strong>Weather:</strong> {entry.weather}\n  //             </div>\n  //           ))\n  //         ) : (\n  //           <p>No weather data available.</p>\n  //         )}\n  //       </div>\n  //     </div>\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Here\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherData, \"gMh8CXeyt+Z1Z5re5bOIyGwxIjA=\");\n_c = WeatherData;\nexport default WeatherData;\nvar _c;\n$RefreshReg$(_c, \"WeatherData\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeatherData","_s","weatherData","setWeatherData","loading","setLoading","error","setError","latitude","longitude","url","fetchWeatherData","response","fetch","data","json","dataseries","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather/src/js/WeatherData.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nfunction WeatherData() {\n\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n\n  const latitude = 51.5074;\n  const longitude = -0.1278;\n\n  const url = `http://www.7timer.info/bin/api.pl?lon=${longitude}&lat=${latitude}&product=civillight&output=json`;\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch(url);\n            const data = await response.json();\n            if (data && data.dataseries) {\n            setWeatherData(data.dataseries);\n            } else {\n            setError('No weather data found');\n            }\n        } catch (err) {\n            setError('Error fetching weather data');\n            console.error('Error fetching weather data:', err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    fetchWeatherData();\n  }, []);\n\n//   return (\n//     <div>\n//       <h1>Weather Data</h1>\n\n//       {loading && <p>Loading weather data...</p>}\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       <div id=\"weather-container\">\n//         {weatherData.length > 0 ? (\n//           weatherData.map((entry, index) => (\n//             <div key={index} className=\"weather-item\">\n//               <strong>Weather:</strong> {entry.weather}\n//             </div>\n//           ))\n//         ) : (\n//           <p>No weather data available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n\n    return (\n        <div>Here</div>\n    )\n}\n\nexport default WeatherData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGxC,MAAMW,QAAQ,GAAG,OAAO;EACxB,MAAMC,SAAS,GAAG,CAAC,MAAM;EAEzB,MAAMC,GAAG,GAAG,yCAAyCD,SAAS,QAAQD,QAAQ,iCAAiC;EAE/GZ,SAAS,CAAC,MAAM;IACd,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACAN,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;QACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,UAAU,EAAE;UAC7Bb,cAAc,CAACW,IAAI,CAACE,UAAU,CAAC;QAC/B,CAAC,MAAM;UACPT,QAAQ,CAAC,uBAAuB,CAAC;QACjC;MACJ,CAAC,CAAC,OAAOU,GAAG,EAAE;QACVV,QAAQ,CAAC,6BAA6B,CAAC;QACvCW,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEW,GAAG,CAAC;MACtD,CAAC,SAAS;QACNZ,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDM,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,oBACIZ,OAAA;IAAAoB,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB;AAACtB,EAAA,CA1DQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA4DpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
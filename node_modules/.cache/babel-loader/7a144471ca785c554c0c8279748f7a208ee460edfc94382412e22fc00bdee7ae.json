{"ast":null,"code":"var _jsxFileName = \"/Users/g/Desktop/weather-app/src/js/WeatherDate.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDate = ({\n  index\n}) => {\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const today = new Date();\n  const futureDate = new Date(today);\n  futureDate.setDate(today.getDate() + index);\n\n  // console.log(today.getDate())\n  // console.log(today.getDate() + index)\n\n  const dayName = days[futureDate.getDay()];\n  const monthName = months[futureDate.getMonth()];\n  const dayOfMonth = futureDate.getDate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dayName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), monthName, \" \", dayOfMonth]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = WeatherDate;\nexport default WeatherDate;\nvar _c;\n$RefreshReg$(_c, \"WeatherDate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDate","index","days","months","today","Date","futureDate","setDate","getDate","dayName","getDay","monthName","getMonth","dayOfMonth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/g/Desktop/weather-app/src/js/WeatherDate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst WeatherDate = ({ index }) => {\n\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n                    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const today = new Date();\n    const futureDate = new Date(today);\n    futureDate.setDate(today.getDate() + index);\n\n    // console.log(today.getDate())\n    // console.log(today.getDate() + index)\n\n    const dayName = days[futureDate.getDay()];\n    const monthName = months[futureDate.getMonth()];\n    const dayOfMonth = futureDate.getDate();\n\n    return (\n        <div>\n            {dayName}\n            <br/>\n            {monthName} {dayOfMonth}\n        </div>\n    )\n\n}\n\nexport default WeatherDate"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAE/B,MAAMC,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;EAC3F,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACtD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAEjF,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,UAAU,GAAG,IAAID,IAAI,CAACD,KAAK,CAAC;EAClCE,UAAU,CAACC,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGP,KAAK,CAAC;;EAE3C;EACA;;EAEA,MAAMQ,OAAO,GAAGP,IAAI,CAACI,UAAU,CAACI,MAAM,CAAC,CAAC,CAAC;EACzC,MAAMC,SAAS,GAAGR,MAAM,CAACG,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMC,UAAU,GAAGP,UAAU,CAACE,OAAO,CAAC,CAAC;EAEvC,oBACIT,OAAA;IAAAe,QAAA,GACKL,OAAO,eACRV,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJP,SAAS,EAAC,GAAC,EAACE,UAAU;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAGd,CAAC;AAAAC,EAAA,GAzBKnB,WAAW;AA2BjB,eAAeA,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}